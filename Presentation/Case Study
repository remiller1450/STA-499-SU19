library(R.matlab) # Reads matlab files
library(stringr) # String manipulation

# NOTE: should have the folder "MatFiles" downloaded and extracted to the location below
# Should have the files "disposition.xls" and "randomization.xlsx" in locations below

## Grab all of the .mat Files from directory H:\V2VMAT\MatFiles
files <- list.files("C:\\Users\\jindalta\\OneDrive - Grinnell College\\MatFiles")

## Read in the first one (ID is 20171207192921)
m1 <- readMat(paste0("C:\\Users\\jindalta\\OneDrive - Grinnell College\\MatFiles\\",files[1]))
part1speed <- m1$elemDataI[[which(rownames(m1$elemDataI) == 'VDS.Veh.Speed')]]
part1time <- m1$elemDataI[[which(rownames(m1$elemDataI) == 'Time')]]
part1heading <- m1$elemDataI[[which(rownames(m1$elemDataI) == 'VDS.Veh.Heading')]]
part1logstream <- m1$elemDataI[[which(rownames(m1$elemDataI) == 'SCC.LogStreams')]][,1]

df1 <- data.frame("time" =  part1time,"speed" = part1speed,"heading" = part1heading, "logstream" = part1logstream)

incdf1 <- df1[which(df1$logstream != 0),names(df1) %in% c("time","speed","heading","logstream")]

incdf1$time <- incdf1$time - incdf1$time[1]
incdf1$speed <- 0.44704*incdf1$speed

##heading angle from degree to radian and set facing direction to be 0
incdf1$heading <- incdf1$heading*pi/180
incdf1$heading <- incdf1$heading - pi


#10.2 is time at which logstream ==3-- will be automated later
#position of point P
for (i in 1:length(incdf1$time)){
  if (i!=1){
    incdf1$posyp[i] <- incdf1$speed[i]/60*cos(incdf1$heading[i])+incdf1$posyp[i-1]
    incdf1$posxp[i] <- incdf1$speed[i]/60*-sin(incdf1$heading[i])+incdf1$posxp[i-1]
  }
  else{
    incdf1$posyp[i] <- incdf1$speed[i]/60*cos(incdf1$heading[i]) - 10.2*incdf1$speed[i]
    incdf1$posxp[i] <- incdf1$speed[i]/60*-sin(incdf1$heading[i])
  }
}

#position of point Q
incdf1$posxq <- (10.2 - incdf1$time) *15.6464
incdf1$posyq <- incdf1$time*0

p <- data.frame(x = incdf1$posxp, y = incdf1$posyp, t = incdf1$time)
q <- data.frame(x = incdf1$posxq, y = incdf1$posyq, t = incdf1$time)

library(plotly)
df <- rbind(p,q)
pl <- df %>%
  plot_ly(
    x = ~x,
    y = ~y,
    frame = ~t,
    type = 'scatter',
    mode = 'markers',
    showlegend = F
  )
  
pl

Zero <- data.frame(x = 0, y = 0)
DP <- pointDistance(incdf1[ , 6:5], Zero, lonlat = FALSE)/incdf1$speed[1]
DQ <- pointDistance(incdf1[ , 7:8], Zero, lonlat = FALSE)/15.6464
plot(DP,DQ)
